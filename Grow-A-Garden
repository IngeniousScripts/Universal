-- Game info for themed loading screens
local gameInfo = {
    [142823291] = { -- Murder Mystery 2
        bgColor = Color3.fromRGB(255, 0, 0),
        title = "MURDER MYSTERY 2 üî™ü©∏",
        facts = {
            "MM2 was created by Nikilis in 2014.",
            "The most expensive knife ever sold cost over 500,000 seers.",
            "There are 3 main roles: Innocent, Sheriff, Murderer.",
            "The game was originally called 'Murder'."
        },
        script = "https://paste.debian.net/plainh/4c9365af/"
    },
    [126884695634066] = { -- Grow A Garden
        bgColor = Color3.fromRGB(0, 200, 0),
        title = "GROW A GARDEN üê∂üå±",
        facts = {
            "You can plant seeds and raise pets.",
            "The most expensive pet costs millions of coins.",
            "You can combine seeds to make rare plants.",
            "Some pets boost your farming speed."
        },
        script = "https://paste.debian.net/plainh/1bcca30b/"
    },
    [8737899170] = { -- Pet Simulator 99
        bgColor = Color3.fromRGB(0, 100, 255),
        title = "PET SIMULATOR 99 üêæüíé",
        facts = {
            "PS99 was released in 2023 by BIG Games.",
            "Some pets are worth billions of gems.",
            "Hatching eggs can give you huge pets.",
            "Trading Plaza is where players trade rare pets."
        },
        script = "https://paste.debian.net/plainh/f7e3fafa/"
    },
    [18901165922] = { -- Pets GO
        bgColor = Color3.fromRGB(255, 165, 0),
        title = "PETS GO üêïüèÉ",
        facts = {
            "Pets GO is inspired by Pet Simulator mechanics.",
            "You can race pets to earn rewards.",
            "Some pets can only be unlocked during events.",
            "The game updates frequently with new worlds."
        },
        script = "https://paste.debian.net/plainh/b11ed528/"
    },
    [920587237] = { -- Adopt Me
        bgColor = Color3.fromRGB(255, 192, 203),
        title = "ADOPT ME üçºüêï",
        facts = {
            "Adopt Me has a huge trading community.",
            "Pets can be evolved into Neons.",
            "You can own vehicles and houses.",
            "Regular events drop rare pets."
        },
        script = "https://paste.debian.net/plainh/e1b2c69b/"
    },
    [2753915549] = { -- Blox Fruits
        bgColor = Color3.fromRGB(0, 0, 0),
        title = "BLOX FRUITS üçâ‚öîÔ∏è",
        facts = {
            "Blox Fruits has over 8 billion visits.",
            "You can unlock powerful fruits with unique skills.",
            "PvP battles are intense and competitive.",
            "The game is inspired by One Piece anime."
        },
        script = "https://paste.debian.net/plainh/dcc899d0/"
    }
}

local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local placeId = game.PlaceId
local gameData = gameInfo[placeId]

local function createLoadingScreen(info)
    local gui = Instance.new("ScreenGui")
    gui.Name = "LoadingScreen"
    gui.Parent = CoreGui
    gui.IgnoreGuiInset = true
    gui.ResetOnSpawn = false

    local bg = Instance.new("Frame", gui)
    bg.Size = UDim2.new(1, 0, 1, 0)
    bg.BackgroundColor3 = info.bgColor
    bg.BackgroundTransparency = 1
    TweenService:Create(bg, TweenInfo.new(1), {BackgroundTransparency = 0}):Play()

    local title = Instance.new("TextLabel", bg)
    title.AnchorPoint = Vector2.new(0.5, 0.5)
    title.Position = UDim2.new(0.5, 0, 0.5, 0)
    title.Size = UDim2.new(0.9, 0, 0.15, 0)
    title.BackgroundTransparency = 1
    title.Text = info.title
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextScaled = false
    title.Font = Enum.Font.GothamBlack
    title.TextSize = 60

    local fact = Instance.new("TextLabel", bg)
    fact.AnchorPoint = Vector2.new(0.5, 0.5)
    fact.Position = UDim2.new(0.5, 0, 0.65, 0)
    fact.Size = UDim2.new(0.9, 0, 0.1, 0)
    fact.BackgroundTransparency = 1
    fact.TextColor3 = Color3.new(1, 1, 1)
    fact.TextScaled = true
    fact.Font = Enum.Font.GothamBold

    task.spawn(function()
        local factIndex = 1
        while gui.Parent do
            fact.TextTransparency = 1
            fact.Text = info.facts[factIndex]
            TweenService:Create(fact, TweenInfo.new(0.5), {TextTransparency = 0}):Play()
            factIndex = (factIndex % #info.facts) + 1
            task.wait(10)
            TweenService:Create(fact, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
            task.wait(0.5)
        end
    end)

    local barFrame = Instance.new("Frame", bg)
    barFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    barFrame.Position = UDim2.new(0.5, 0, 0.75, 0)
    barFrame.Size = UDim2.new(0.8, 0, 0.05, 0)
    barFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    barFrame.BorderSizePixel = 0
    local barFrameUICorner = Instance.new("UICorner", barFrame)
    barFrameUICorner.CornerRadius = UDim.new(0, 10)

    local bar = Instance.new("Frame", barFrame)
    bar.Size = UDim2.new(0, 0, 1, 0)
    bar.BackgroundColor3 = Color3.new(1, 1, 1)
    bar.BorderSizePixel = 0
    local barUICorner = Instance.new("UICorner", bar)
    barUICorner.CornerRadius = UDim.new(0, 10)

    TweenService:Create(bar, TweenInfo.new(600, Enum.EasingStyle.Linear), {Size = UDim2.new(1, 0, 1, 0)}):Play()

    local loadingText = Instance.new("TextLabel", bg)
    loadingText.AnchorPoint = Vector2.new(0.5, 0)
    loadingText.Position = UDim2.new(0.5, 0, 0.81, 0)
    loadingText.Size = UDim2.new(0.2, 0, 0.05, 0)
    loadingText.BackgroundTransparency = 1
    loadingText.TextColor3 = Color3.new(1, 1, 1)
    loadingText.TextScaled = true
    loadingText.Font = Enum.Font.GothamBold
    loadingText.Text = "Loading"

    task.spawn(function()
        while gui.Parent do
            for i = 1, 3 do
                loadingText.Text = "Loading" .. string.rep(".", i)
                task.wait(0.5)
            end
            loadingText.Text = "Loading"
            task.wait(0.5)
        end
    end)

    local emojis = {"üéØ", "üî™", "üå±", "üê∂", "üíé", "üèÉ", "ü©∏", "üêæ", "üçâ", "‚öîÔ∏è", "üê±", "üçº"}
    local emoji = Instance.new("TextLabel", bg)
    emoji.Text = emojis[math.random(#emojis)]
    emoji.TextScaled = true
    emoji.Font = Enum.Font.GothamBlack
    emoji.Size = UDim2.new(0.1, 0, 0.1, 0)
    emoji.AnchorPoint = Vector2.new(0.5, 0.5)
    emoji.Position = UDim2.new(math.random() * 0.8 + 0.1, 0, math.random() * 0.5 + 0.1, 0)
    emoji.BackgroundTransparency = 1
    emoji.ZIndex = 10
    emoji.Active = true
    emoji.Selectable = true

    local score = 0
    local scoreLabel = Instance.new("TextLabel", bg)
    scoreLabel.AnchorPoint = Vector2.new(0.5, 0)
    scoreLabel.Position = UDim2.new(0.5, 0, 0.9, 0)
    scoreLabel.Size = UDim2.new(0.3, 0, 0.05, 0)
    scoreLabel.BackgroundTransparency = 1
    scoreLabel.TextColor3 = Color3.new(1, 1, 1)
    scoreLabel.TextScaled = true
    scoreLabel.Font = Enum.Font.GothamBold
    scoreLabel.Text = "Score: 0"

    local function moveEmoji()
        emoji.Text = emojis[math.random(#emojis)]
        emoji.Position = UDim2.new(math.random() * 0.8 + 0.1, 0, math.random() * 0.5 + 0.1, 0)
    end

    local function onEmojiClicked(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            score = score + 1
            scoreLabel.Text = "Score: " .. score
            moveEmoji()
        end
    end

    emoji.InputBegan:Connect(onEmojiClicked)

    -- Fade out after 10 minutes
    task.delay(600, function()
        TweenService:Create(bg, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
        task.wait(1)
        gui:Destroy()
    end)
end

if gameData then
    task.spawn(function()
        loadstring(game:HttpGet(gameData.script, true))()
    end)
    createLoadingScreen(gameData)
else
    warn("[Loader] No script for this game.")
end
